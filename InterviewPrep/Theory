1. How does hash table work.
For every key, the "hashing function" creates an "index", which denotes the spot at which the "value" corresponding to this key will be
stored.
Sometimes, the same index might be generated for 2 keys, causing a "collision".
Collision resolution - when it does occur, look from that point on for the next "open" slot, also called as 
"open addressing".
Another approach is "chaining" where the index locaiton in the array now stores a pointer to a collection 
(as many items as have the same index). The more the collisions, the more the number of items in that collection,
hence more difficult to search.

2. SDL - Specification and Descriptoin Language

3. Understanding Stackato 4.0
https://docs.hpcloud.com/stackato/

HCP
1. Debian package creation: Copy terraform binary, user docs(sample .properties file), bootstrap binary into a temp folder,
then use "fpm" ( a tool to create .deb files)  to create the debian package. This debian package is then installed by the 
operator who wants to do the intial deploy of HCP (via bootstrap install hcp.properties)

2. Bootstrap install workflow
  a. Parse ad validate the .properties file (no. of gluster nodes at least 2, subnetIDs provided for AWS etc)
  b. use NTP to have the "same" synchronised time to a given reference,  on all cluster components.
  c. Use an in-memory state store for?????
  d. Setup Cloud provider ( e.g. add ClusterID tags to AWS subnets, validate can reach openstack endpoints with tenant creds etc)
  e. Creae security groups
  f. Create as many computes with Profile = kubernetes-master, and in the specified zone (Profile used to help configure node
  one way or another. e.g. if node, then have an EBS block device mounted, if master, then configure etcd )
    i. Apply the terraform template, and persists the TF state in an in-memory state store

4. CloudFoundry - Use buildpacks which are a bunch of scripts that help detect and confirgure the runtime environment 
for an application.
When an app is staged, CF checks if the first buildpack(pre-sorted in a given priority order) is compatible with the app. 
If not, it moves on to checking the next one...if none is found, staging of the app fails.
Lifecycle of an app (in CF)
a. User navigates to directory holding application code, and runs a "cf push"
